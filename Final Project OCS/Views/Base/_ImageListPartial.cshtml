@model IEnumerable<dynamic>
<!-- Bootstrap CSS -->

<!-- Font Awesome CSS for Icons -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css">

<!-- jQuery -->
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>

<!-- Popper.js (for Bootstrap dropdowns) -->
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>

<!-- Bootstrap JS -->
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

<!-- SweetAlert2 for beautiful alerts -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>



<div>
    <form id="createImageForm" method="post" enctype="multipart/form-data">
        <div class="form-group">
            <label for="imageFiles">Select Images</label>
            <input type="file" class="form-control" id="imageFiles" name="imageFiles" multiple required />
        </div>
        <input type="hidden" for="itemId" name="itemId" value="@ViewBag.ProductId" />
        <div class="form-group">
            <button type="button" class="btn btn-success" onclick="submitCreateImageForm()">Upload</button>
        </div>

    </form>
</div>

<div class="mt-3 d-flex flex-wrap">
    @foreach (var image in Model)
    {
        <div class="image-item m-2 position-relative">
            <!-- Dropdown Button with Image -->
            <div class="dropdown">
                <button type="button" class="btn p-0" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" style="border: none; background: none;">
                    <img src="@image.ImageUrl" class="img-thumbnail" alt="Product Image" width="100" height="100" data-toggle="tooltip" data-placement="top" title="Press on image to edit" />
                </button>
                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                    <a class="dropdown-item edit-image-btn" href="#" data-id="@image.Id">
                        <i class="fas fa-edit text-warning"></i> Edit
                    </a>
                    <a class="dropdown-item delete-image-btn" href="#" data-id="@image.Id">
                        <i class="fas fa-trash-alt text-danger"></i> Delete
                    </a>
                </div>
            </div>
        </div>
    }
</div>

<!-- Modal for Editing Image -->
<div class="modal fade" id="editImageModal" tabindex="-1" aria-labelledby="editImageModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editImageModalLabel">Edit Image</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>

            </div>
            <div class="modal-body">
                <form id="editImageForm">
                    <input type="hidden" id="imageId" name="imageId" />
                    <div class="form-group">
                        <label for="newImageFile">Select New Image</label>
                        <input type="file" class="form-control" id="newImageFile" name="newImageFile" required />
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>

                <button type="button" class="btn btn-primary" onclick="submitEditImageForm()">Save changes</button>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        // Initialize tooltips and dropdowns
        $('[data-toggle="tooltip"]').tooltip();
        $('.dropdown-toggle').dropdown();

        // Reinitialize components when the modal is shown
        $('#editImageModal').on('shown.bs.modal', function () {
            $('[data-toggle="tooltip"]').tooltip();
            $('.dropdown-toggle').dropdown();
        });

        // Event delegation for edit and delete buttons
        $(document).on('click', '.edit-image-btn', function () {
            var imageId = $(this).data('id');
            $('#imageId').val(imageId);
            $('#editImageModal').modal('show');
        });

        $(document).on('click', '.delete-image-btn', function () {
            var imageId = $(this).data('id');
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("DeleteImage", "Base")',
                        type: 'POST',
                        data: { imageId: imageId },
                        success: function (data) {
                            if (data.success) {
                                Swal.fire(
                                    'Deleted!',
                                    'Your image has been deleted.',
                                    'success'
                                ).then(function () {
                                    location.reload();
                                });
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: data.message
                                });
                            }
                        },
                        error: function () {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: 'An error occurred while deleting the image.'
                            });
                        }
                    });
                }
            });
        });
        setTimeout(function () {
            $('.image-item:first-child img').tooltip('show');
        }, 500);
        setTimeout(function () {
            $('.image-item:first-child img').tooltip('hide');
        }, 5500);
        
    });

    // Function to handle image form submission
    function submitCreateImageForm() {
        var formData = new FormData($('#createImageForm')[0]);

        $.ajax({
            url: '@Url.Action("CreateImages", "Base")',
            type: 'POST',
            data: formData,
            contentType: false,
            processData: false,
            success: function (data) {
                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: data.message
                    }).then(function () {
                        location.reload();
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: data.message
                    });
                }
            },
            error: function () {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'An error occurred while uploading the images.'
                });
            }
        });
    }

    function submitEditImageForm() {
        var formData = new FormData($('#editImageForm')[0]);

        $.ajax({
            url: '@Url.Action("EditImage", "Base")',
            type: 'POST',
            data: formData,
            contentType: false,
            processData: false,
            success: function (data) {
                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: data.message
                    }).then(function () {
                        location.reload(); // Reload the page or update the image list dynamically
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: data.message
                    });
                }
            },
            error: function () {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'An error occurred while updating the image.'
                });
            }
        });
    }
    function deleteAllImages() {
        // Confirm deletion with SweetAlert
        Swal.fire({
            title: 'Are you sure?',
            text: "This will delete all images associated with this item. You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete all!'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: '@Url.Action("DeleteAllImages", "Base")', // Replace with your actual controller and action
                    type: 'POST',
                    data: { itemId: '@ViewBag.ProductId' }, // Pass the item ID to the server
                    success: function (data) {
                        if (data.success) {
                            Swal.fire(
                                'Deleted!',
                                data.message,
                                'success'
                            ).then(function () {
                                location.reload(); // Reload the page to reflect the changes
                            });
                        } else {
                            Swal.fire(
                                'Error!',
                                data.message,
                                'error'
                            );
                        }
                    },
                    error: function () {
                        Swal.fire(
                            'Error!',
                            'An error occurred while deleting the images.',
                            'error'
                        );
                    }
                });
            }
        });
    }
</script>
